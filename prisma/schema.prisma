generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model car {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  make            String       @db.VarChar(255)
  model           String       @db.VarChar(255)
  year            Int
  color           String       @db.VarChar(255)
  price_per_day   Int
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  order           order[]
}

model invitation {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status          String       @db.VarChar(255)
  invited_email   String       @db.VarChar(255)
  role            String       @db.VarChar(255)
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model order {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_date  DateTime @db.Timestamp(6)
  end_date    DateTime @db.Timestamp(6)
  total_price Int
  status      String   @db.VarChar(255)
  user_id     String   @db.Uuid
  car_id      String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  car         car      @relation(fields: [car_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user        user     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?      @db.VarChar(255)
  name        String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  user_id     String       @db.Uuid
  tenant_id   String       @db.VarChar(255)
  car         car[]
  invitation  invitation[]
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  order        order[]
  organization organization[]
}
